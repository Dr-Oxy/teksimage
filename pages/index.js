import Head from 'next/head';
import Image from 'next/image';
import { useState } from 'react';
import { useForm } from 'react-hook-form';

import { teksimageLogo, imageIcon } from '@/public/assets';

export default function Home() {
  const [results, setResults] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [generated, setGenerated] = useState(false);
  const [progress, setProgress] = useState(0);

  const {
    register,
    handleSubmit,
    reset,
    formState: { errors },
  } = useForm();

  function resetState() {
    setTimeout(() => {
      reset();
      setGenerated(false);
    }, 5000);
  }

  const generatePrompt = handleSubmit(async (data) => {
    setIsLoading(true);

    try {
      const response = await openai.createImage({
        prompt: data.prompt,
        n: 1,
        size: '512x512',

        onUploadProgress: ({ loaded, total }) => {
          let progress = ((loaded / total) * 100).toFixed(2);
          setProgress(progress);
        },
      });

      if (response.status === 200) {
        setProgress(0);
        setResults(response.data.data);
        setIsLoading(false);

        setGenerated(true);

        resetState();
      }
    } catch (error) {
      setIsLoading(false);
      setProgress(0);
      setGenerated(false);

      if (error.response) {
        console.log(error.response.status, error.response.data);
      } else {
        console.log(error.message);
      }
    }
  });

  return (
    <div>
      <Head>
        <title>TeksImage</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="h-screen flex items-center justify-center">
        <section className="max-w-[960px] mx-auto text-center">
          <Image className="mx-auto" src={teksimageLogo} alt="teksimage logo" />

          <h1 className="font-bold text-5xl text-[#212120]">
            Text to Image Generator
          </h1>

          <p className="text-[#444] text-base lg:w-[85%] mx-auto mt-5">
            Create astounding art in different forms of media in a matter of
            seconds using nothing but your own words. Create stunning graphics
            without any code being written by utilising cutting-edge text to
            image.
          </p>

          <form onSubmit={generatePrompt} className="mt-8 lg:w-[450px] mx-auto">
            <input
              className="w-full bg-white border border-[#8F9499] text-base p-2 rounded"
              type="text"
              placeholder="Write here..."
              {...register('prompt', { required: true, maxLength: 1000 })}
            />
            {errors.prompt && (
              <div className="text-red-400"> Field cannot be empty</div>
            )}

            {isLoading ? (
              <div className="mt-5 w-full mx-auto bg-gray-100 border border-gray-400 ">
                <div
                  className="bg-[#E08304] text-white p-3 text-sm"
                  style={{ width: `${progress}%` }}
                >
                  Generating...
                </div>
              </div>
            ) : (
              <div className="mt-5 w-full mx-auto">
                <button
                  disabled={isLoading || generated}
                  className={`p-3 text-white text-sm w-full mx-auto capitalize rounded-md ${
                    generated ? 'bg-[#00B058]' : 'bg-[#177AE5]'
                  } `}
                >
                  {generated ? 'generated successfully' : 'generate'}
                </button>
              </div>
            )}
          </form>
        </section>
      </main>
    </div>
  );
}
